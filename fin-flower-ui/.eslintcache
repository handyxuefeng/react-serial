[{"/Users/hanxf.han/project/react-serial/fin-flower-ui/src/index.tsx":"1","/Users/hanxf.han/project/react-serial/fin-flower-ui/src/components/Button/button.tsx":"2","/Users/hanxf.han/project/react-serial/fin-flower-ui/src/App.tsx":"3"},{"size":296,"mtime":1607579043725,"results":"4","hashOfConfig":"5"},{"size":2043,"mtime":1607572786896,"results":"6","hashOfConfig":"5"},{"size":994,"mtime":1607584048990,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"vw31ds",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanxf.han/project/react-serial/fin-flower-ui/src/index.tsx",[],["16","17"],"/Users/hanxf.han/project/react-serial/fin-flower-ui/src/components/Button/button.tsx",["18"],"import React, { HtmlHTMLAttributes } from \"react\";\nimport classNames from \"classnames\";\n\nexport enum ButtonSize {\n  Large = \"lg\",\n  Small = \"sm\",\n}\n\nexport enum ButtonType {\n  Primary = \"primary\",\n  Default = \"default\",\n  Danger = \"danger\",\n  Link = \"link\",\n}\n\n//定义按钮的属性的接口约束\ninterface BaseButtonProps {\n  className?: string;\n\n  /**设置 Button 的禁用 */\n  disabled?: boolean;\n\n  /**设置 Button 的尺寸 */\n  size?: ButtonSize;\n\n  /**设置 Button 的类型 */\n  btnType?: ButtonType;\n\n  children: React.ReactNode;\n  href?: string;\n}\n\n//增加按钮的事件和原生属性,利用 & 计算符，把多个类型合并为一个新的类型\ntype NativeButtonProps = BaseButtonProps &\n  React.ButtonHTMLAttributes<HTMLElement>;\n\n//获取链接标签上的原生属性，,利用 & 计算符，把多个类型合并为一个新的类型\ntype NativeAnchorProps = BaseButtonProps &\n  React.AnchorHTMLAttributes<HTMLElement>;\n\n//通过Partial<T> 运算符把 NativeButtonProps & NativeAnchorProps 结合只有的属性变成可选的\nexport type ButtonProps = Partial<NativeButtonProps & NativeAnchorProps>;\n\n//定义一个Button的函数式组件\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const {\n    className, //用户自定义的属性\n    disabled,\n    size,\n    btnType,\n    children,\n    href,\n    ...restProps //展开所有的原生属性\n  } = props;\n\n  /**\n   * btn, btn-lg, btn-primary\n   * className 表示用户自定义的属性\n   */\n  const classes = classNames(\"btn\", className, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    disabled: btnType === ButtonType.Link && disabled,\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return (\n      <a className={classes} href={href} {...restProps}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <button className={classes} disabled={disabled} {...restProps}>\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default,\n};\n\nexport default Button;\n","/Users/hanxf.han/project/react-serial/fin-flower-ui/src/App.tsx",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":1,"column":17,"nodeType":"25","messageId":"26","endLine":1,"endColumn":35},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"@typescript-eslint/no-unused-vars","'HtmlHTMLAttributes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]